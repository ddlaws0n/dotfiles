## MacOS Path Helper, constructs PATH based on /etc/paths & /etc/paths.d/*
if command -v path_helper &> /dev/null; then
  eval "$(/usr/libexec/path_helper -s)"
fi

## XDG Base Directory Specification
export XDG_CONFIG_HOME="{{ .chezmoi.homeDir }}/.config"
export XDG_CACHE_HOME="{{ .chezmoi.homeDir }}/.cache"
export XDG_DATA_HOME="{{ .chezmoi.homeDir }}/.local/share"
export XDG_STATE_HOME="{{ .chezmoi.homeDir }}/.local/state"

## Zsh configuration directory
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

## Essential PATH setup (before mise activation)
# Add Homebrew to PATH if not already present
if [[ -d "/opt/homebrew/bin" ]] && [[ ":$PATH:" != *":/opt/homebrew/bin:"* ]]; then
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
  export HOMEBREW_PREFIX="/opt/homebrew"
elif [[ -d "/usr/local/bin" ]] && [[ ":$PATH:" != *":/usr/local/bin:"* ]]; then
  export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
  export HOMEBREW_PREFIX="/usr/local"
fi

# Add essential user paths
for dir in "$HOME/.scripts" "$HOME/.local/bin" "/Users/dlawson/.codeium/windsurf/bin"; do
  if [[ -d "$dir" ]] && [[ ":$PATH:" != *":$dir:"* ]]; then
    export PATH="$PATH:$dir"
  fi
done

## Language environment managers
# Note: bun, go, node, pnpm, uv are managed by mise activate
# Only export variables for tools that need them but aren't PATH-managed by mise

# Bun - mise manages the PATH, but some tools expect BUN_INSTALL
if command -v mise &> /dev/null && mise list bun &> /dev/null; then
  export BUN_INSTALL="$(mise where bun 2>/dev/null || echo "$HOME/.bun")"
fi

# Golang - mise manages the PATH, but some tools expect GOPATH  
if command -v mise &> /dev/null && mise list go &> /dev/null; then
  export GOPATH="$HOME/go"  # Standard location for Go workspace
fi

# Note: Non-mise tools (Windsurf, local bins) are managed by path.zsh

## Custom paths and environment variables
{{ if .work_computer }}
# Wiz credentials
export WIZ_DOTENV_PATH="$XDG_CONFIG_HOME/wiz/.env"
{{ end }}

{{ if .use_secrets }}
# API Keys
export OPENROUTER_API_KEY="{{ onepasswordRead .my.openrouter_api_key .personal_1p_account }}"
export FIRECRAWL_API_KEY="{{ onepasswordRead .my.firecrawl_api_key .personal_1p_account }}"
{{ end }}

## Editor preferences
export EDITOR="nano"
export VISUAL="code"

# Pager
export PAGER="less"

### Locale settings
export LANG="en_US.UTF-8"

## ZSH Completions Setup
# FPATH must be set before compinit runs in ZDOTDIR
fpath=(
  $HOMEBREW_PREFIX/share/zsh/site-functions
  $HOME/.local/share/zsh/site-functions  # Custom completions
  $fpath
)

## Tool activations

# Activate mise for version management (primary activation point)
if command -v mise &> /dev/null; then
    eval "$(mise activate zsh)"
fi

# FZF key bindings and fuzzy completion
if [ -f ~/.fzf.zsh ]; then
    source ~/.fzf.zsh
elif [ -f "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh" ]; then
    source "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh"
    source "$HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh"
fi
